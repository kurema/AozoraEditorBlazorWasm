<div class="snippet_header">
	<p class="snippet_header_title">スニペット一覧</p>
	<div class="snippet_header_info snippet_button @(ShowInfo?"snippet_header_info_on":"snippet_header_info_off")" @onclick="_=>{ShowInfo=!ShowInfo;StateHasChanged();}" title="@InfoText">@(FullEditor.GetMaterialSymbolOutlined("info"))</div>
	<div class="snippet_header_run_all snippet_button" @onclick="_=>{RunPreviewAll();StateHasChanged();}" title="全てのプレビューを表示">@(FullEditor.GetMaterialSymbolOutlined("play_arrow"))</div>
	<input @bind="SearchWord" placeholder="検索" />
</div>

@if (ShowInfo)
{
	<div class="snippet_info">
		@foreach (var item in InfoText.Split('\n', '\r'))
		{
			if (string.IsNullOrEmpty(item)) continue;
			<p>@item</p>
		}
	</div>
}


@if (Snippets.Loader.ContentIndex?.ContentsFlat is not null)
{
	foreach (var item in Snippets.Loader.ContentIndex.ContentsFlat.ToArray())
	{
		if (!string.IsNullOrWhiteSpace(SearchWord) && !item.Text.Any(a => a.Contains(SearchWord, StringComparison.InvariantCultureIgnoreCase)) &&
		!item.Labels.AllValues.Any(a => a.Text.Contains(SearchWord, StringComparison.InvariantCultureIgnoreCase))
		) continue;

		<div class="snippet">
			<div class="snippet_background" />
			<p class="snippet_text">@((MarkupString)ItemToHtmlText(item))</p>
			@if (item.DocumentLink is not null)
			{
				<a class="snippet_document_link snippet_button" title="公式ドキュメント" target="_blank" href="@(item.DocumentLink)">@(FullEditor.GetMaterialSymbolOutlined("link"))</a>
			}
			@if (item.Obsolete == true)
			{
				<p class="snippet_obsolete snippet_button" title="この要素は現在使われていません。">@(FullEditor.GetMaterialSymbolOutlined("warning"))</p>
			}
			<p class="snippet_run_button snippet_button" @onclick="_=>RunPreview(item)">@(FullEditor.GetMaterialSymbolOutlined("play_arrow"))</p>
			<div class="snippet_labels">
				<table>
					@ListToTableHtml(item.Labels.JpFullyRoman,new List<string>(), "全文")
					@ListToTableHtml(item.Labels.Jp,item.Labels.ShortJp, "日本語")
					@ListToTableHtml(item.Labels.En,item.Labels.ShortEn, "英語")
				</table>
			</div>
			@if (Previews.TryGetValue(item, out var preview))
			{
				<div class="snippet_preview">
					<div class="snippet_preview_original">@(preview.OriginalText)</div>
					<div class="snippet_preview_result">
						<iframe srcdoc="@(preview.GetHtmleFull(Root?.Theme?.SelectedTheme?.GetHeaderLinks()))" sandbox="allow-same-origin" height="75" />
					</div>
					@if (!string.IsNullOrWhiteSpace(preview.Error))
					{
						<div class="snippet_preview_error">@(preview.Error)</div>
					}
				</div>
			}
		</div>
	}
}

@code {
	string SearchWord { get; set; } = string.Empty;
	bool ShowInfo { get; set; } = false;

	[CascadingParameter(Name = nameof(Root))]
	public FullEditor? Root { get; set; }


	const string InfoText = """"
一部のコマンドはプレビューやエクスポートに非対応です。
スニペットを挿入する際は半角モードにしてスペース後にキーワードを入力してください。
キーワードは、コマンド全文、および日本語語句(太字部分)・英語語句とその略称いずれにも対応しています。
"""";

	protected override async Task OnInitializedAsync()
	{
		await Snippets.Loader.LoadFromResouceAsync();
		await base.OnInitializedAsync();
	}

	string ItemToHtmlText(Snippets.Schema.Content content)
	{
		var text = string.Join("<br />", content.Text.Select(a => System.Net.WebUtility.HtmlEncode(a)));
		return Snippets.Index.InterpolateFinal(text, n => $"<span class=\"snippet_arg\">{Snippets.Index.ArgTypeToNormalText(content.ArgTypes[n])}</span>", "<b>", "</b>");
	}

	RenderFragment ListToTableHtml(IList<string> strings, IList<string> strings2, string title)
	{
		static string join(IList<string> s) => string.Join(" / ", s);

		const int w1 = 15;
		const int w2 = 35;

		if (strings.Count == 0 && strings2.Count == 0) return new RenderFragment(_ => { });
		if (strings.Count == 0)
		{
			return @<tr><th style="width: @(w1)%;"></th><td style="width: @(w2)%;"></td><th style="width: @(w1)%;">@(title)省略</th><td style="width: @(w2)%;">@join(strings2)</td></tr>;
		}
		if (strings2.Count == 0)
		{
			return @<tr><th style="width: @(w1)%;">@title</th><td style="width: @(w1+w2*2)%;" colspan="3">@join(strings)</td></tr>;
		}
		return @<tr><th style="width: @(w1)%;">@title</th><td style="width: @(w2)%;">@join(strings)</td><th style="width: @(w1)%;">@(title)省略</th><td style="width: @(w2)%;">@join(strings2)</td></tr>;
	}

	void RunPreview(Snippets.Schema.Content content)
	{
		if (Previews.ContainsKey(content)) { Previews.Remove(content); }
		else Previews.Add(content, new PreviewEntry(content));
		StateHasChanged();
	}

	void RunPreviewAll()
	{
		if (Snippets.Loader.ContentIndex?.ContentsFlat is null) return;
		foreach (var item in Snippets.Loader.ContentIndex.ContentsFlat.ToArray())
		{
			if (Previews.ContainsKey(item)) continue;
			Previews.Add(item, new PreviewEntry(item));
		}
		StateHasChanged();
	}

	Dictionary<Snippets.Schema.Content, PreviewEntry> Previews = new();

	class PreviewEntry
	{
		public string OriginalText { get; private set; } = string.Empty;
		public string Html { get; private set; } = string.Empty;
		public string HtmlFull => $@"<html><head><link rel=""stylesheet"" type=""text/css"" href=""_content/AozoraEditorSharedUI/css/aozora.css"" /><link rel=""stylesheet"" type=""text/css"" href=""_content/AozoraEditorSharedUI/css/zero-margin.css"" /></head><body>{Html}</body></head>";
		public string Error { get; private set; } = string.Empty;

		public string GetHtmleFull(string? cssLinks)
		{
			cssLinks = cssLinks ?? string.Empty;

			return $@"
<html>
  <head>
    <link rel=""stylesheet"" type=""text/css"" href=""_content/AozoraEditorSharedUI/css/aozora.css"" />
    <link rel=""stylesheet"" type=""text/css"" href=""_content/AozoraEditorSharedUI/css/zero-margin.css"" />
{cssLinks}
  </head>
  <body>
	{Html}
  </body>
</html>																																																	</head>
";
		}

		public PreviewEntry(Snippets.Schema.Content content)
		{
			var text = $"1行目\n{string.Join('\n', content.Text.Select(a => string.IsNullOrEmpty(a) ? "本文" : a))}テキスト\n";
			text = Snippets.Index.InterpolateFinal(text, n => Snippets.Index.ArgTypeToSampleText(content.ArgTypes[n], n + 1), string.Empty, string.Empty);

			var js = new Aozora.JstreamString(text);
			var output = new Aozora.Helpers.OutputString();
			var message = new Aozora.Helpers.OutputString();
			var parser = new Aozora.Aozora2Html(js, output, message)
				{
					Section = Aozora.Aozora2Html.SectionKind.tail,
					Template = new Aozora.Helpers.TemplateBasic(),
					ExtendedOption = new()
					{
						UseGeneralImage = true,
						WarnUnknownCommand = true,
						NoIllegalCharCheckInCommand = true,
					}
				};
			try
			{
				while (true) { if (!parser.Parse()) break; }
			}
			catch (Aozora.Exceptions.TerminateException)
			{
			}
			catch
			{
			}
			OriginalText = text;
			Html = output.ToString();
			Error = message.ToString();
		}
	}
}
