@(SelectedTheme?.Fragment)

@code {
    public record ThemeEntry(string Title, string Key, RenderFragment Fragment, string MonacoTheme)
    {
        public IEnumerable<string> AdditionalCss { get; init; } = Array.Empty<string>();

        public string GetHeaderLinks() => string.Join('\n', AdditionalCss.Select(a => $@"<link rel=""stylesheet"" type=""text/css"" href=""{a}"" />"));
    }

	private ThemeEntry _selectedTheme;
	public ThemeEntry SelectedTheme
	{
		get => _selectedTheme;
		set
		{
			if (!ThemeEntries.Contains(value)) return;
			_selectedTheme = value;
			if (value is not null) _ = Global.SetTheme(value.MonacoTheme);
			StateHasChanged();
		}
	}

	public System.Collections.ObjectModel.ObservableCollection<ThemeEntry> ThemeEntries { get; }

	public ThemeControl()
	{
		ThemeEntries = new() {
			new ThemeEntry("ライト","Light",@<LightTheme />,"aozora-theme"),
			new ThemeEntry("ダーク","Dark",@<DarkTheme />,"aozora-theme-dark"){ AdditionalCss=new string[]{"_content/AozoraEditorSharedUI/css/darkmode.css" } },
		};
		_selectedTheme = ThemeEntries[0];
	}
}
