<div class="tab_control_container">
	<div class="tab_control_controller">
		@foreach (var item in Pages)
		{
			<button @onclick="()=>ActivateTab(item)">
				@item.Title
			</button>
		}
	</div>

	<div class="tab_control_buttons">
	</div>

	<div class="tab_control_body">
		@foreach (var item in Pages)
		{
			bool active = item == ActivePage;
			string additonalClass = active ? "tab_page_container_active" : "tab_page_container_hidden";
			if (item is ComponentBase f)
			{
				<div class="tab_page_container @additonalClass">
					<DynamicComponent Type="f.GetType()" />
				</div>
			}
		}
	</div>
</div>

<style>
	.tab_control_container {
		display: grid;
		grid-template-rows: auto 1fr;
		grid-template-columns: 1fr auto;
		flex: 1 0 0;
	}

	.tab_control_controller {
		grid-row: 1/2;
		grid-column: 1/2;
		min-width: 0;
	}

	.tab_control_buttons {
		grid-row: 2/3;
		grid-column: 1/2;
		min-width: 0;
	}

	.tab_control_body {
		grid-row: 2/3;
		grid-column: 1/3;
		min-width: 0;
		display: flex;
	}

	.tab_page_container {
		display: flex;
		flex: 1 0 0;
	}

	.tab_page_container_active {
	}

	.tab_page_container_hidden {
		display: none;
	}
</style>

@code {
	System.Collections.ObjectModel.ObservableCollection<ITabPage> Pages = new() { new EditorPage(), new EditorPage() };
	public ITabPage? ActivePage { get; set; }

	public void ActivateTab(ITabPage page)
	{
		if (ActivePage is not null)
		{
			ActivePage.TitleChanged -= TabTitleChanged;
		}
		ActivePage = page;
		if (ActivePage is not null)
		{
			ActivePage.TitleChanged += TabTitleChanged;
		}
	}

	private void TabTitleChanged(object? s, object e)
	{
		this.StateHasChanged();
	}
}
