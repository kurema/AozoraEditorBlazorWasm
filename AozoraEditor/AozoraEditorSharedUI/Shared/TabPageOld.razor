<div class="tab_page_container @GetContainerClass()">
	@ChildContent
</div>

<style>
	.tab_page_container {
		display:flex;
		flex: 1 0 0;
	}

	.tab_page_container_hidden {
		display: none;
	}

	.tab_page_container_active {
	}
</style>

@code {
	[CascadingParameter]
	private TabPagesOld? Parent { get; set; }

	[Parameter]
	public RenderFragment? ChildContent { get; set; }

	[Parameter]
	public string Title { get; set; } = String.Empty;

	public string GetContainerClass() => (Parent?.ActivePage == this) ? "tab_page_container_active" : "tab_page_container_hidden";

	protected override void OnInitialized()
	{
		if (Parent == null) throw new ArgumentNullException(nameof(Parent), "TabPage must exist within a TabPages");
		Parent.AddPage(this);
		base.OnInitialized();
	}
}
