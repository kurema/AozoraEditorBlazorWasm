@page "/";
@inject IJSRuntime JSRuntime;

<div style="display:flex;align-items:stretch;width:100%;height:100%;margin:0;">
	<div id="container-monaco" class="" style="flex:1 0 50%;width:0;"></div>
	<div id="container-preview" style="flex:1 0 50%;width:0;">
		<iframe style="width:100%;height:100%;border:none;" srcdoc="@htmlPreview"></iframe>
	</div>
</div>

@*<button @onclick="Test">プレビュー</button>*@

@code {
	int monaco_id = -1;

	string htmlPreview = "<html><body>プレビューボタンを押してください。</body></html>";

	private async Task Test()
	{
		var text = await GetText();

		var jstream = new Aozora.JstreamString(text, false);
		var output = new Aozora.Helpers.OutputString();
		//var output = new Aozora.Helpers.OutputConsole();
		var aozora = new Aozora.Aozora2Html(jstream, output, new Aozora.Helpers.OutputConsole(), "./gaiji/", new string[0])
			{
				UseJisx0213Accent = true,
				UseJisx0214EmbedGaiji = true,
				UseUnicodeEmbedGaiji = true,
			};
		await Task.Run(() => aozora.Process());
		htmlPreview = output.ToString();
	}

	private async Task<string> GetText()
	{
		if (monaco_id < 0) return string.Empty;
		return await JSRuntime.InvokeAsync<string>("GetMonacoText", monaco_id);
	}

	private async Task InitEditor()
	{
		monaco_id = await JSRuntime.InvokeAsync<int>("ApplyMonacoEditorAozora", "container-monaco", "タイトル\n作者\n\n本文。\n\n［＃本文終わり］\n本文後のテキスト\n");
	}


	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();
		await InitEditor();
	}
}
